# name: "Build and Deploy Pull Request Preview Environment"

# on:
#   pull_request:
#     branches: [ main ]
#     types: [opened, synchronize, reopened, closed]

# env:
#   PREVIEW_BRANCH_PREFIX: pr-

# jobs:
#   preview:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Deploy preview environment
#       - name: Deploy Preview
#         if: github.event_name == 'pull_request' && github.event.action != 'closed'
#         run: |
#           # Create a new preview branch for the pull request
#           git checkout -b "${{ env.PREVIEW_BRANCH_PREFIX }}${{ github.event.pull_request.number }}"
          
#           # Define the commands to deploy to the preview branch here
#           git push origin "${{ env.PREVIEW_BRANCH_PREFIX }}${{ github.event.pull_request.number }}"
      
#       # Delete preview environment when pull request is closed
#       - name: Delete Preview
#         if: github.event_name == 'pull_request' && github.event.action == 'closed'
#         run: |          
#           # Delete the preview branch for the pull request
#           git push origin --delete "${{ env.PREVIEW_BRANCH_PREFIX }}${{ github.event.pull_request.number }}"
  
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: [preview]
  #   steps:
  #     - name: Comment on pull request
  #       uses: actions/github-script@v5
  #       with:
  #         script: |
  #           const { owner, repo } = context.repo;
  #           const prNumber = context.payload.pull_request.number;
  #           const deploymentUrl = context.payload.deployment_status.target_url;
  #           const commentBody = `A preview environment has been created: ${deploymentUrl}`;

  #           const { data: comments } = await github.issues.listComments({
  #             owner,
  #             repo,
  #             issue_number: prNumber
  #           });

  #           const existingComment = comments.find(comment => comment.body.includes('A preview environment has been created:'));
  #           if (existingComment) {
  #             await github.issues.updateComment({
  #               owner,
  #               repo,
  #               comment_id: existingComment.id,
  #               body: commentBody
  #             });
  #           } else {
  #             await github.issues.createComment({
  #               owner,
  #               repo,
  #               issue_number: prNumber,
  #               body: commentBody
  #             });
  #           }
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # cleanup:
  #   if: github.event.action == 'closed'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Delete preview environments
  #       uses: actions/github-script@v5
  #       with:
  #         script: |
  #           const { owner, repo } = context.repo;
  #           const prNumber = context.payload.pull_request.number;
  #           const { data: environments } = await github.repos.listEnvironments({ owner, repo });

  #           for (const env of environments) {
  #             if (env.name.includes(`PR-${prNumber}-`)) {
  #               await github.repos.deleteEnvironment({
  #                 owner,
  #                 repo,
  #                 environment_id: env.id
  #               });
  #             }
  #           }
  #         env:
  #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
